stages:
  - setup
  - build
  - test

cache:
  key: "$CI_BUILD_REF_NAME"
  paths:
    - venv/
    - node_modules/
    - bower_components/

before_script:
  - "echo we are working in $CI_PROJECT_DIR"

setup_python:
  stage: setup
  only:
    - develop_software
    - develop_gulp
  script:
    - "echo installing python dependencies in virtual environment"
    - "[ ! -d venv ] && virtualenv -p python3 venv"
    - "source venv/bin/activate"
    - "pip3 install -r requirements.txt"

# build_multilang:
#   stage: build
#   only:
#     - develop_software
#     - develop_gulp
#   script:
#     - "[ ! -d tu9onlinekurstest ] && make -f tools/makefiles/multilang"
#     - "rsync -i /Users/n/.ssh/can -avr --exclude '*.png' --exclude '*.mp4' tu9onlinekurstest/* mulfadmin@guest6.mulf.tu-berlin.de:/home/mulfadmin/gitlab-ci"

gulp_build_multilang:
  stage: build
  only:
    - develop_gulp
    - develop_software
  script:
    # install npm and all required packages
    - "git clone https://github.com/creationix/nvm.git ~/.nvm && cd ~/.nvm && git checkout `git describe --abbrev=0 --tags`"
    - ". ~/.nvm/nvm.sh"
    - "nvm install 6"
    - "nvm use 6"
    - "nvm alias default 6"
    - "cd $CI_PROJECT_DIR"
    - "npm install"
    # workaround for not working git:// urls at mathjax repo
    - "git config --global url.'https://'.insteadOf git://"
    # we need gulp and bower globally
    - "npm install -g gulp bower"
    # build everything
    - "[ ! -d tu9onlinekurstest ] && make -f tools/makefiles/multilang"
    # copy all files that were generated by gulp to a user directory that is symlinked from /var/www/gitlab-ci-test
    - "rsync -avr --exclude public/* /home/gitlab-runner/gitlab-ci"

gulp_all_tests:
  stage: test
  only:
    - develop_gulp
    - develop_software
  script:
    - "source venv/bin/activate"
    - "export BASE_URL=http://guest6.mulf.tu-berlin.de/gitlab-ci-test/"
    - "export LC_ALL=en_US.UTF-8"
    - "export LANG=en_US.UTF-8"
    - "export LANGUAGE=en_US.UTF-8"
    - "green -vvv --run-coverage"
    - "coverage html"
    # move coverage report to /coverage
    - "rsync -avr htmlcov/* /home/gitlab-runner/gitlab-ci/coverage"

# all_tests_and_coverage:
#   stage: test
#   only:
#     - develop_software
#     - develop_gulp
#   script:
#     # taken from setup_nvm above for time optimization
#     - "echo installing npm and phantomJS via nvm"
#     - "git clone https://github.com/creationix/nvm.git ~/.nvm && cd ~/.nvm && git checkout `git describe --abbrev=0 --tags`"
#     - ". ~/.nvm/nvm.sh"
#     - "nvm install 5.0"
#     - "nvm use 5.0"
#     - "npm install"
#     # end
#     - "source venv/bin/activate"
#     - "export BASE_URL=http://guest6.mulf.tu-berlin.de/gitlab-ci/"
#     - "export LC_ALL=en_US.UTF-8"
#     - "export LANG=en_US.UTF-8"
#     - "export LANGUAGE=en_US.UTF-8"
#     - "green -vvv --run-coverage"
#     - "coverage html"
#     - "rsync -i /Users/n/.ssh/can -avr htmlcov/* mulfadmin@guest6.mulf.tu-berlin.de:/home/mulfadmin/gitlab-ci/coverage"
#   artifacts:
#     name: "${CI_BUID_STAGE}_${CI_BUID_REF_NAME}"
#     paths:
#       - src/test/htmlcov
