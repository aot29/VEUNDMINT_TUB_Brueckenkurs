stages:
  - setup
  - build
  - test

cache:
  paths:
    - node_modules/
    - venv/

before_script:
  - "echo we are working in $CI_PROJECT_DIR"
  # runn ssh-agent (inside the build environment)
  - "eval $(ssh-agent -s)"
  - "ssh add <echo('$SSH_PRIVATE_KEY')"

test_ssh:
  stage: setup
  script:
    # try to ssh to the server
    - ssh mulfadmin@guest6.mulf.tu-berlin.de

setup_nvm:
  stage: setup
  script:
    - "echo installing npm and phantomJS via nvm"
    - "git clone https://github.com/creationix/nvm.git ~/.nvm && cd ~/.nvm && git checkout `git describe --abbrev=0 --tags`"
    - ". ~/.nvm/nvm.sh"
    - "nvm install 5.0"
    - "nvm use 5.0"
    - "npm install"
    - "npm run dev"
  artifacts:
    name: "${CI_BUID_STAGE}_${CI_BUID_REF_NAME}"
    paths:
      - node_modules/

setup_python:
  stage: setup
  script:
    - "echo installing python dependencies in virtual environment"
    - "[ ! -d venv ] && virtualenv -p python3 venv"
    - "source venv/bin/activate"
    - "pip3 install -r requirements.txt"
  artifacts:
    name: "${CI_BUID_STAGE}_${CI_BUID_REF_NAME}"
    paths:
      - venv/

build_multilang:
  stage: build
  script:
    - "[ ! -d tu9onlinekurstest ] && make -f tools/makefiles/multilang"

all_tests_and_coverage:
  stage: test
  script:
    - "source venv/bin/activate"
    - "cd src/test"
    - "green -vvv --run-coverage"
  dependencies:
    - setup_python
    - setup_nvm
