%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Donnerstag, 5. MÃ¤rz 2015 02:22 Uhr MEZ
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
8.50000 6.01576 376.484 376.484 rc
0.470588 0 0.0549020 RG
newpath
9.50000 8.01577 m
195.816 194.332 l
196.245 194.754 l
382.984 8.01577 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
9.50000 194.757 m
382.984 194.757 l
S
Q
0 J
1 j
q
q
0 w
newpath
9.50000 194.757 m
9.50000 198.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 207 7 13 rc
newpath
16.7968 214.437 m
8.20312 214.437 l
8.20312 213.765 l
16.7968 213.765 l
16.7968 214.437 l
h
f
Q
newpath
16.1718 217.937 m
16.1718 216.281 l
16.7968 216.281 l
16.8125 216.421 l
16.8281 216.859 l
16.8281 217.130 16.9869 217.362 17.3046 217.554  c
17.6224 217.747 18.0156 217.843 18.4843 217.843  c
19.0364 217.843 19.4817 217.625 19.8203 217.187  c
20.1588 216.750 20.3281 216.171 20.3281 215.453  c
20.3281 214.744 20.1067 214.190 19.6640 213.789  c
19.2213 213.388 18.6041 213.187 17.8125 213.187  c
17.0312 213.187 l
17.0312 212.796 l
17.4531 212.796 l
19.2239 212.796 20.1093 212.083 20.1093 210.656  c
20.1093 209.385 19.5520 208.750 18.4375 208.750  c
17.9479 208.750 17.5208 208.854 17.1562 209.062  c
17.0208 209.145 16.9270 209.484 16.8750 210.078  c
16.8750 210.171 l
16.2500 210.171 l
16.2500 208.734 l
16.9270 208.484 17.6927 208.359 18.5468 208.359  c
19.4114 208.359 20.0963 208.554 20.6015 208.945  c
21.1067 209.335 21.3593 209.864 21.3593 210.531  c
21.3593 211.645 20.7031 212.442 19.3906 212.921  c
20.1927 213.130 20.7682 213.427 21.1171 213.812  c
21.4661 214.197 21.6406 214.734 21.6406 215.421  c
21.6406 216.286 21.3593 216.971 20.7968 217.476  c
20.2343 217.981 19.4687 218.234 18.5000 218.234  c
17.6145 218.234 16.8385 218.135 16.1718 217.937  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
71.7473 194.757 m
71.7473 198.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
68 207 7 13 rc
newpath
78.7968 214.437 m
70.2031 214.437 l
70.2031 213.765 l
78.7968 213.765 l
78.7968 214.437 l
h
f
Q
newpath
78.0156 218.000 m
78.0156 217.375 l
78.3802 216.322 78.9427 215.437 79.7031 214.718  c
80.3906 214.093 l
81.1614 213.364 81.6770 212.786 81.9375 212.359  c
82.1979 211.932 82.3281 211.442 82.3281 210.890  c
82.3281 210.244 82.1692 209.729 81.8515 209.343  c
81.5338 208.958 81.1145 208.765 80.5937 208.765  c
80.0208 208.765 79.5364 208.921 79.1406 209.234  c
78.9947 209.349 78.9010 209.770 78.8593 210.500  c
78.8593 210.656 l
78.2187 210.656 l
78.2187 208.937 l
79.1354 208.552 79.9791 208.359 80.7500 208.359  c
81.5937 208.359 82.2890 208.599 82.8359 209.078  c
83.3828 209.557 83.6562 210.161 83.6562 210.890  c
83.6562 211.880 83.0416 212.796 81.8125 213.640  c
81.0468 214.171 l
79.8281 215.005 79.1614 215.916 79.0468 216.906  c
83.6093 216.906 l
83.6093 218.000 l
78.0156 218.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
133.994 194.757 m
133.994 198.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
130 207 7 13 rc
newpath
140.796 214.437 m
132.203 214.437 l
132.203 213.765 l
140.796 213.765 l
140.796 214.437 l
h
f
Q
newpath
143.578 208.515 m
143.578 216.359 l
143.625 216.984 l
143.635 217.234 143.705 217.398 143.835 217.476  c
143.966 217.554 144.234 217.593 144.640 217.593  c
145.390 217.609 l
145.390 218.000 l
140.531 218.000 l
140.531 217.609 l
141.265 217.593 l
141.671 217.593 141.940 217.554 142.070 217.476  c
142.200 217.398 142.276 217.234 142.296 216.984  c
142.328 216.359 l
142.328 210.531 l
142.296 209.890 l
142.296 209.588 142.208 209.437 142.031 209.437  c
141.906 209.437 141.614 209.479 141.156 209.562  c
140.531 209.671 l
140.531 209.281 l
143.578 208.515 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.242 194.757 m
196.242 198.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
194.906 216.234 m
193.937 216.234 193.156 215.783 192.562 214.882  c
191.968 213.981 191.671 212.796 191.671 211.328  c
191.671 209.817 191.968 208.614 192.562 207.718  c
193.156 206.822 193.953 206.375 194.953 206.375  c
195.953 206.375 196.752 206.822 197.351 207.718  c
197.950 208.614 198.250 209.812 198.250 211.312  c
198.250 212.822 197.950 214.020 197.351 214.906  c
196.752 215.791 195.937 216.234 194.906 216.234  c
h
194.921 215.843 m
196.255 215.906 196.921 214.369 196.921 211.234  c
196.921 208.244 196.265 206.750 194.953 206.750  c
193.651 206.750 193.000 208.265 193.000 211.296  c
193.000 214.265 193.640 215.781 194.921 215.843  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
258.489 194.757 m
258.489 198.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
263.578 208.515 m
263.578 216.359 l
263.625 216.984 l
263.635 217.234 263.705 217.398 263.835 217.476  c
263.966 217.554 264.234 217.593 264.640 217.593  c
265.390 217.609 l
265.390 218.000 l
260.531 218.000 l
260.531 217.609 l
261.265 217.593 l
261.671 217.593 261.940 217.554 262.070 217.476  c
262.200 217.398 262.276 217.234 262.296 216.984  c
262.328 216.359 l
262.328 210.531 l
262.296 209.890 l
262.296 209.588 262.208 209.437 262.031 209.437  c
261.906 209.437 261.614 209.479 261.156 209.562  c
260.531 209.671 l
260.531 209.281 l
263.578 208.515 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
320.736 194.757 m
320.736 198.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
322.015 218.000 m
322.015 217.375 l
322.380 216.322 322.942 215.437 323.703 214.718  c
324.390 214.093 l
325.161 213.364 325.677 212.786 325.937 212.359  c
326.197 211.932 326.328 211.442 326.328 210.890  c
326.328 210.244 326.169 209.729 325.851 209.343  c
325.533 208.958 325.114 208.765 324.593 208.765  c
324.020 208.765 323.536 208.921 323.140 209.234  c
322.994 209.349 322.901 209.770 322.859 210.500  c
322.859 210.656 l
322.218 210.656 l
322.218 208.937 l
323.135 208.552 323.979 208.359 324.750 208.359  c
325.593 208.359 326.289 208.599 326.835 209.078  c
327.382 209.557 327.656 210.161 327.656 210.890  c
327.656 211.880 327.041 212.796 325.812 213.640  c
325.046 214.171 l
323.828 215.005 323.161 215.916 323.046 216.906  c
327.609 216.906 l
327.609 218.000 l
322.015 218.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
382.984 194.757 m
382.984 198.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
384.171 217.937 m
384.171 216.281 l
384.796 216.281 l
384.812 216.421 l
384.828 216.859 l
384.828 217.130 384.987 217.362 385.304 217.554  c
385.622 217.747 386.015 217.843 386.484 217.843  c
387.036 217.843 387.481 217.625 387.820 217.187  c
388.158 216.750 388.328 216.171 388.328 215.453  c
388.328 214.744 388.106 214.190 387.664 213.789  c
387.221 213.388 386.604 213.187 385.812 213.187  c
385.031 213.187 l
385.031 212.796 l
385.453 212.796 l
387.224 212.796 388.109 212.083 388.109 210.656  c
388.109 209.385 387.552 208.750 386.437 208.750  c
385.947 208.750 385.520 208.854 385.156 209.062  c
385.020 209.145 384.927 209.484 384.875 210.078  c
384.875 210.171 l
384.250 210.171 l
384.250 208.734 l
384.927 208.484 385.692 208.359 386.546 208.359  c
387.411 208.359 388.096 208.554 388.601 208.945  c
389.106 209.335 389.359 209.864 389.359 210.531  c
389.359 211.645 388.703 212.442 387.390 212.921  c
388.192 213.130 388.768 213.427 389.117 213.812  c
389.466 214.197 389.640 214.734 389.640 215.421  c
389.640 216.286 389.359 216.971 388.796 217.476  c
388.234 217.981 387.468 218.234 386.500 218.234  c
385.614 218.234 384.838 218.135 384.171 217.937  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
40.6236 194.757 m
40.6236 196.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
102.871 194.757 m
102.871 196.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
165.118 194.757 m
165.118 196.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
227.365 194.757 m
227.365 196.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
289.613 194.757 m
289.613 196.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
351.860 194.757 m
351.860 196.757 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
196.242 381.500 m
196.242 8.01577 l
S
Q
0 J
1 j
q
q
0 w
newpath
196.242 381.500 m
192.242 381.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
177 381 7 13 rc
newpath
187.796 388.437 m
179.203 388.437 l
179.203 387.765 l
187.796 387.765 l
187.796 388.437 l
h
f
Q
newpath
187.171 391.937 m
187.171 390.281 l
187.796 390.281 l
187.812 390.421 l
187.828 390.859 l
187.828 391.130 187.987 391.362 188.304 391.554  c
188.622 391.747 189.015 391.843 189.484 391.843  c
190.036 391.843 190.481 391.625 190.820 391.187  c
191.158 390.750 191.328 390.171 191.328 389.453  c
191.328 388.744 191.106 388.190 190.664 387.789  c
190.221 387.388 189.604 387.187 188.812 387.187  c
188.031 387.187 l
188.031 386.796 l
188.453 386.796 l
190.224 386.796 191.109 386.083 191.109 384.656  c
191.109 383.385 190.552 382.750 189.437 382.750  c
188.947 382.750 188.520 382.854 188.156 383.062  c
188.020 383.145 187.927 383.484 187.875 384.078  c
187.875 384.171 l
187.250 384.171 l
187.250 382.734 l
187.927 382.484 188.692 382.359 189.546 382.359  c
190.411 382.359 191.096 382.554 191.601 382.945  c
192.106 383.335 192.359 383.864 192.359 384.531  c
192.359 385.645 191.703 386.442 190.390 386.921  c
191.192 387.130 191.768 387.427 192.117 387.812  c
192.466 388.197 192.640 388.734 192.640 389.421  c
192.640 390.286 192.359 390.971 191.796 391.476  c
191.234 391.981 190.468 392.234 189.500 392.234  c
188.614 392.234 187.838 392.135 187.171 391.937  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.242 319.252 m
192.242 319.252 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
177 319 7 13 rc
newpath
187.796 326.437 m
179.203 326.437 l
179.203 325.765 l
187.796 325.765 l
187.796 326.437 l
h
f
Q
newpath
187.015 330.000 m
187.015 329.375 l
187.380 328.322 187.942 327.437 188.703 326.718  c
189.390 326.093 l
190.161 325.364 190.677 324.786 190.937 324.359  c
191.197 323.932 191.328 323.442 191.328 322.890  c
191.328 322.244 191.169 321.729 190.851 321.343  c
190.533 320.958 190.114 320.765 189.593 320.765  c
189.020 320.765 188.536 320.921 188.140 321.234  c
187.994 321.349 187.901 321.770 187.859 322.500  c
187.859 322.656 l
187.218 322.656 l
187.218 320.937 l
188.135 320.552 188.979 320.359 189.750 320.359  c
190.593 320.359 191.289 320.599 191.835 321.078  c
192.382 321.557 192.656 322.161 192.656 322.890  c
192.656 323.880 192.041 324.796 190.812 325.640  c
190.046 326.171 l
188.828 327.005 188.161 327.916 188.046 328.906  c
192.609 328.906 l
192.609 330.000 l
187.015 330.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.242 257.005 m
192.242 257.005 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
177 257 7 13 rc
newpath
187.796 264.437 m
179.203 264.437 l
179.203 263.765 l
187.796 263.765 l
187.796 264.437 l
h
f
Q
newpath
190.578 258.515 m
190.578 266.359 l
190.625 266.984 l
190.635 267.234 190.705 267.398 190.835 267.476  c
190.966 267.554 191.234 267.593 191.640 267.593  c
192.390 267.609 l
192.390 268.000 l
187.531 268.000 l
187.531 267.609 l
188.265 267.593 l
188.671 267.593 188.940 267.554 189.070 267.476  c
189.200 267.398 189.276 267.234 189.296 266.984  c
189.328 266.359 l
189.328 260.531 l
189.296 259.890 l
189.296 259.588 189.208 259.437 189.031 259.437  c
188.906 259.437 188.614 259.479 188.156 259.562  c
187.531 259.671 l
187.531 259.281 l
190.578 258.515 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.242 194.757 m
192.242 194.757 l
S
Q
q
0 w
newpath
196.242 132.510 m
192.242 132.510 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
190.578 133.515 m
190.578 141.359 l
190.625 141.984 l
190.635 142.234 190.705 142.398 190.835 142.476  c
190.966 142.554 191.234 142.593 191.640 142.593  c
192.390 142.609 l
192.390 143.000 l
187.531 143.000 l
187.531 142.609 l
188.265 142.593 l
188.671 142.593 188.940 142.554 189.070 142.476  c
189.200 142.398 189.276 142.234 189.296 141.984  c
189.328 141.359 l
189.328 135.531 l
189.296 134.890 l
189.296 134.588 189.208 134.437 189.031 134.437  c
188.906 134.437 188.614 134.479 188.156 134.562  c
187.531 134.671 l
187.531 134.281 l
190.578 133.515 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.242 70.2631 m
192.242 70.2631 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
187.015 81.0000 m
187.015 80.3750 l
187.380 79.3229 187.942 78.4375 188.703 77.7187  c
189.390 77.0937 l
190.161 76.3645 190.677 75.7864 190.937 75.3593  c
191.197 74.9322 191.328 74.4427 191.328 73.8906  c
191.328 73.2447 191.169 72.7291 190.851 72.3437  c
190.533 71.9583 190.114 71.7656 189.593 71.7656  c
189.020 71.7656 188.536 71.9218 188.140 72.2343  c
187.994 72.3489 187.901 72.7708 187.859 73.5000  c
187.859 73.6562 l
187.218 73.6562 l
187.218 71.9375 l
188.135 71.5520 188.979 71.3593 189.750 71.3593  c
190.593 71.3593 191.289 71.5989 191.835 72.0781  c
192.382 72.5572 192.656 73.1614 192.656 73.8906  c
192.656 74.8802 192.041 75.7968 190.812 76.6406  c
190.046 77.1718 l
188.828 78.0052 188.161 78.9166 188.046 79.9062  c
192.609 79.9062 l
192.609 81.0000 l
187.015 81.0000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.242 8.01577 m
192.242 8.01577 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
187.171 18.9375 m
187.171 17.2812 l
187.796 17.2812 l
187.812 17.4218 l
187.828 17.8593 l
187.828 18.1302 187.987 18.3619 188.304 18.5546  c
188.622 18.7474 189.015 18.8437 189.484 18.8437  c
190.036 18.8437 190.481 18.6250 190.820 18.1875  c
191.158 17.7500 191.328 17.1718 191.328 16.4531  c
191.328 15.7447 191.106 15.1901 190.664 14.7890  c
190.221 14.3880 189.604 14.1875 188.812 14.1875  c
188.031 14.1875 l
188.031 13.7968 l
188.453 13.7968 l
190.224 13.7968 191.109 13.0833 191.109 11.6562  c
191.109 10.3854 190.552 9.75000 189.437 9.75000  c
188.947 9.75000 188.520 9.85416 188.156 10.0625  c
188.020 10.1458 187.927 10.4843 187.875 11.0781  c
187.875 11.1718 l
187.250 11.1718 l
187.250 9.73437 l
187.927 9.48437 188.692 9.35937 189.546 9.35937  c
190.411 9.35937 191.096 9.55468 191.601 9.94531  c
192.106 10.3359 192.359 10.8645 192.359 11.5312  c
192.359 12.6458 191.703 13.4427 190.390 13.9218  c
191.192 14.1302 191.768 14.4270 192.117 14.8125  c
192.466 15.1979 192.640 15.7343 192.640 16.4218  c
192.640 17.2864 192.359 17.9713 191.796 18.4765  c
191.234 18.9817 190.468 19.2343 189.500 19.2343  c
188.614 19.2343 187.838 19.1354 187.171 18.9375  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.242 350.376 m
194.242 350.376 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.242 288.128 m
194.242 288.128 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.242 225.881 m
194.242 225.881 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.242 163.634 m
194.242 163.634 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.242 101.386 m
194.242 101.386 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.242 39.1394 m
194.242 39.1394 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
