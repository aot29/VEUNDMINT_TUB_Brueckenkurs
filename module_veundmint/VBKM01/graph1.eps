%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Mittwoch, 16. April 2014 12:08 Uhr MESZ
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
7.50000 -1.00000 380.494 390.000 rc
1.00000 0 0 RG
newpath
8.50000 388.000 m
10.4847 380.799 l
12.2116 374.589 l
14.1536 367.666 l
16.1086 360.762 l
18.0542 353.957 l
19.8581 347.705 l
21.7259 341.291 l
23.6576 334.721 l
25.5831 328.235 l
27.5637 321.630 l
29.3082 315.868 l
31.2721 309.444 l
33.2441 303.060 l
35.1444 296.972 l
36.8702 291.496 l
38.9222 285.052 l
40.6605 279.649 l
42.6827 273.430 l
44.4726 267.983 l
46.4364 262.071 l
48.3064 256.502 l
50.2576 250.756 l
52.0493 245.537 l
53.9820 239.969 l
55.9895 234.253 l
57.7371 229.334 l
59.6245 224.080 l
61.5743 218.717 l
63.4819 213.533 l
65.3275 208.576 l
67.3768 203.142 l
69.2182 198.320 l
71.1843 193.236 l
72.9658 188.686 l
74.9135 183.775 l
76.7462 179.213 l
78.6618 174.506 l
80.5347 169.965 l
82.4954 165.275 l
84.3838 160.821 l
86.3150 156.329 l
88.2302 151.938 l
89.9901 147.959 l
92.0071 143.463 l
93.8111 139.501 l
95.7345 135.338 l
97.5756 131.414 l
99.6198 127.124 l
101.389 123.468 l
103.399 119.382 l
105.230 115.720 l
107.233 111.779 l
108.961 108.435 l
110.929 104.688 l
112.830 101.132 l
114.730 97.6403 l
116.623 94.2231 l
118.442 90.9981 l
120.407 87.5756 l
122.281 84.3755 l
124.253 81.0727 l
126.038 78.1403 l
128.011 74.9632 l
129.900 71.9827 l
131.785 69.0705 l
133.754 66.0939 l
135.568 63.4111 l
137.425 60.7222 l
139.476 57.8220 l
141.332 55.2584 l
143.231 52.6978 l
145.162 50.1572 l
146.937 47.8785 l
148.829 45.5089 l
150.707 43.2181 l
152.715 40.8346 l
154.487 38.7889 l
156.532 36.4955 l
158.378 34.4875 l
160.204 32.5582 l
162.167 30.5475 l
164.139 28.5953 l
165.932 26.8769 l
167.837 25.1127 l
169.696 23.4509 l
171.711 21.7166 l
173.455 20.2722 l
175.458 18.6777 l
177.340 17.2414 l
179.205 15.8791 l
181.070 14.5754 l
182.973 13.3072 l
184.991 12.0309 l
186.840 10.9220 l
188.666 9.88504 l
190.618 8.83978 l
192.565 7.86193 l
194.313 7.03973 l
196.384 6.13366 l
198.117 5.43203 l
200.143 4.67678 l
202.077 4.02172 l
203.804 3.49111 l
205.746 2.95553 l
207.701 2.48178 l
209.647 2.07543 l
211.451 1.75674 l
213.318 1.48559 l
215.250 1.26818 l
217.175 1.11523 l
219.156 1.02432 l
220.901 1.00000 l
222.865 1.03512 l
224.836 1.13705 l
226.737 1.29840 l
228.463 1.49862 l
230.515 1.80325 l
232.253 2.11788 l
234.275 2.54916 l
236.065 2.98944 l
238.029 3.53576 l
239.899 4.11758 l
241.850 4.78860 l
243.642 5.46237 l
245.574 6.25091 l
247.582 7.13784 l
249.329 7.96627 l
251.217 8.91986 l
253.167 9.96926 l
255.074 11.0590 l
256.920 12.1729 l
258.969 13.4781 l
260.811 14.7125 l
262.777 16.0947 l
264.558 17.4044 l
266.506 18.8987 l
268.339 20.3641 l
270.254 21.9575 l
272.127 23.5763 l
274.088 25.3355 l
275.976 27.0923 l
277.907 28.9521 l
279.823 30.8597 l
281.582 32.6681 l
283.599 34.8062 l
285.403 36.7777 l
287.327 38.9412 l
289.168 41.0715 l
291.212 43.5051 l
292.982 45.6703 l
294.991 48.1930 l
296.822 50.5526 l
298.825 53.1995 l
300.554 55.5387 l
302.522 58.2651 l
304.423 60.9619 l
306.323 63.7189 l
308.216 66.5274 l
310.034 69.2834 l
312.000 72.3266 l
313.874 75.2887 l
315.846 78.4713 l
317.631 81.4098 l
319.604 84.7211 l
321.493 87.9554 l
323.378 91.2429 l
325.347 94.7418 l
327.161 98.0233 l
329.018 101.442 l
331.068 105.286 l
332.925 108.829 l
334.824 112.513 l
336.755 116.323 l
338.530 119.882 l
340.422 123.735 l
342.299 127.620 l
344.308 131.842 l
346.080 135.626 l
348.125 140.058 l
349.971 144.119 l
351.797 148.196 l
353.760 152.643 l
355.732 157.174 l
357.525 161.355 l
359.430 165.856 l
361.289 170.308 l
363.304 175.201 l
365.048 179.492 l
367.050 184.484 l
368.933 189.239 l
370.797 194.009 l
372.663 198.842 l
374.566 203.832 l
376.584 209.191 l
378.433 214.165 l
380.259 219.133 l
382.211 224.507 l
384.158 229.934 l
385.994 235.111 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
8.50000 120.444 m
385.994 120.444 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
284 143 14 15 rc
newpath
290.250 149.250 m
290.458 149.468 290.614 149.692 290.718 149.921  c
290.802 150.067 290.927 150.463 291.093 151.109  c
291.656 150.281 l
291.802 150.072 291.981 149.877 292.195 149.695  c
292.408 149.513 292.593 149.385 292.750 149.312  c
292.854 149.270 292.968 149.250 293.093 149.250  c
293.270 149.250 293.414 149.299 293.523 149.398  c
293.632 149.497 293.687 149.614 293.687 149.750  c
293.687 149.916 293.656 150.031 293.593 150.093  c
293.479 150.197 293.343 150.250 293.187 150.250  c
293.093 150.250 293.000 150.229 292.906 150.187  c
292.708 150.125 292.572 150.093 292.500 150.093  c
292.395 150.093 292.276 150.151 292.140 150.265  c
291.880 150.484 291.567 150.911 291.203 151.546  c
291.718 153.718 l
291.802 154.052 291.869 154.252 291.921 154.320  c
291.974 154.388 292.031 154.421 292.093 154.421  c
292.177 154.421 292.281 154.375 292.406 154.281  c
292.635 154.083 292.833 153.828 293.000 153.515  c
293.218 153.625 l
292.947 154.125 292.609 154.541 292.203 154.875  c
291.974 155.062 291.776 155.156 291.609 155.156  c
291.369 155.156 291.182 155.020 291.046 154.750  c
290.953 154.583 290.770 153.875 290.500 152.625  c
289.833 153.770 289.302 154.505 288.906 154.828  c
288.645 155.046 288.395 155.156 288.156 155.156  c
287.989 155.156 287.833 155.093 287.687 154.968  c
287.593 154.875 287.546 154.750 287.546 154.593  c
287.546 154.458 287.593 154.343 287.687 154.250  c
287.781 154.156 287.895 154.109 288.031 154.109  c
288.166 154.109 288.307 154.177 288.453 154.312  c
288.567 154.406 288.656 154.453 288.718 154.453  c
288.760 154.453 288.822 154.421 288.906 154.359  c
289.104 154.192 289.375 153.843 289.718 153.312  c
290.062 152.781 290.286 152.395 290.390 152.156  c
290.130 151.125 289.989 150.583 289.968 150.531  c
289.875 150.250 289.750 150.052 289.593 149.937  c
289.437 149.822 289.203 149.765 288.890 149.765  c
288.796 149.765 288.687 149.770 288.562 149.781  c
288.562 149.546 l
290.250 149.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
8.50000 120.444 m
8.50000 125.644 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 133 7 13 rc
newpath
16.7968 140.437 m
8.20312 140.437 l
8.20312 139.765 l
16.7968 139.765 l
16.7968 140.437 l
h
f
Q
newpath
21.0468 140.828 m
21.0468 141.734 l
19.8906 141.734 l
19.8906 144.000 l
18.8437 144.000 l
18.8437 141.734 l
15.2031 141.734 l
15.2031 140.921 l
19.2031 135.218 l
19.8906 135.218 l
19.8906 140.828 l
21.0468 140.828 l
h
18.8437 140.828 m
18.8437 136.546 l
15.8281 140.828 l
18.8437 140.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
55.6868 120.444 m
55.6868 125.644 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
53 133 7 13 rc
newpath
63.7968 140.437 m
55.2031 140.437 l
55.2031 139.765 l
63.7968 139.765 l
63.7968 140.437 l
h
f
Q
newpath
62.6562 137.031 m
62.9062 136.447 63.2187 136.000 63.5937 135.687  c
63.9687 135.375 64.4322 135.218 64.9843 135.218  c
65.6822 135.218 66.2135 135.442 66.5781 135.890  c
66.8593 136.224 67.0000 136.578 67.0000 136.953  c
67.0000 137.588 66.6041 138.239 65.8125 138.906  c
66.3437 139.114 66.7447 139.411 67.0156 139.796  c
67.2864 140.182 67.4218 140.635 67.4218 141.156  c
67.4218 141.895 67.1822 142.536 66.7031 143.078  c
66.0885 143.796 65.1979 144.156 64.0312 144.156  c
63.4479 144.156 63.0520 144.083 62.8437 143.937  c
62.6354 143.791 62.5312 143.635 62.5312 143.468  c
62.5312 143.343 62.5807 143.237 62.6796 143.148  c
62.7786 143.059 62.8958 143.015 63.0312 143.015  c
63.1354 143.015 63.2447 143.031 63.3593 143.062  c
63.4322 143.083 63.5963 143.158 63.8515 143.289  c
64.1067 143.419 64.2812 143.500 64.3750 143.531  c
64.5312 143.572 64.6979 143.593 64.8750 143.593  c
65.3020 143.593 65.6770 143.427 66.0000 143.093  c
66.3229 142.760 66.4843 142.364 66.4843 141.906  c
66.4843 141.572 66.4114 141.250 66.2656 140.937  c
66.1510 140.697 66.0260 140.515 65.8906 140.390  c
65.7135 140.224 65.4661 140.072 65.1484 139.937  c
64.8307 139.802 64.5052 139.734 64.1718 139.734  c
63.9687 139.734 l
63.9687 139.531 l
64.3020 139.489 64.6380 139.369 64.9765 139.171  c
65.3151 138.974 65.5599 138.737 65.7109 138.460  c
65.8619 138.184 65.9375 137.875 65.9375 137.531  c
65.9375 137.104 65.8020 136.755 65.5312 136.484  c
65.2604 136.213 64.9218 136.078 64.5156 136.078  c
63.8593 136.078 63.3125 136.427 62.8750 137.125  c
62.6562 137.031 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
102.873 120.444 m
102.873 125.644 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
100 133 7 13 rc
newpath
110.796 140.437 m
102.203 140.437 l
102.203 139.765 l
110.796 139.765 l
110.796 140.437 l
h
f
Q
newpath
114.953 142.343 m
114.359 144.000 l
109.281 144.000 l
109.281 143.765 l
110.770 142.401 111.820 141.286 112.429 140.421  c
113.039 139.557 113.343 138.770 113.343 138.062  c
113.343 137.510 113.177 137.059 112.843 136.710  c
112.510 136.362 112.109 136.187 111.640 136.187  c
111.224 136.187 110.846 136.309 110.507 136.554  c
110.169 136.799 109.921 137.161 109.765 137.640  c
109.531 137.640 l
109.635 136.859 109.906 136.260 110.343 135.843  c
110.781 135.427 111.328 135.218 111.984 135.218  c
112.682 135.218 113.265 135.442 113.734 135.890  c
114.203 136.338 114.437 136.864 114.437 137.468  c
114.437 137.906 114.333 138.343 114.125 138.781  c
113.812 139.468 113.307 140.192 112.609 140.953  c
111.557 142.109 110.895 142.807 110.625 143.046  c
112.875 143.046 l
113.333 143.046 113.653 143.028 113.835 142.992  c
114.018 142.955 114.184 142.885 114.335 142.781  c
114.487 142.677 114.614 142.531 114.718 142.343  c
114.953 142.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
150.060 120.444 m
150.060 125.644 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
148 133 7 13 rc
newpath
158.796 140.437 m
150.203 140.437 l
150.203 139.765 l
158.796 139.765 l
158.796 140.437 l
h
f
Q
newpath
158.531 136.234 m
160.625 135.218 l
160.828 135.218 l
160.828 142.484 l
160.828 142.963 160.849 143.263 160.890 143.382  c
160.932 143.502 161.015 143.593 161.140 143.656  c
161.265 143.718 161.520 143.755 161.906 143.765  c
161.906 144.000 l
158.671 144.000 l
158.671 143.765 l
159.078 143.755 159.341 143.718 159.460 143.656  c
159.580 143.593 159.664 143.510 159.710 143.406  c
159.757 143.302 159.781 142.994 159.781 142.484  c
159.781 137.843 l
159.781 137.208 159.760 136.802 159.718 136.625  c
159.687 136.489 159.632 136.390 159.554 136.328  c
159.476 136.265 159.380 136.234 159.265 136.234  c
159.109 136.234 158.895 136.302 158.625 136.437  c
158.531 136.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.247 120.444 m
197.247 125.644 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
194.468 137.750 m
194.468 136.770 194.617 135.924 194.914 135.210  c
195.210 134.497 195.604 133.968 196.093 133.625  c
196.479 133.354 196.875 133.218 197.281 133.218  c
197.937 133.218 198.526 133.552 199.046 134.218  c
199.703 135.052 200.031 136.182 200.031 137.609  c
200.031 138.609 199.888 139.458 199.601 140.156  c
199.315 140.854 198.947 141.362 198.500 141.679  c
198.052 141.997 197.625 142.156 197.218 142.156  c
196.395 142.156 195.708 141.671 195.156 140.703  c
194.697 139.880 194.468 138.895 194.468 137.750  c
h
195.718 137.906 m
195.718 139.093 195.864 140.062 196.156 140.812  c
196.395 141.437 196.755 141.750 197.234 141.750  c
197.463 141.750 197.700 141.648 197.945 141.445  c
198.190 141.242 198.375 140.895 198.500 140.406  c
198.697 139.687 198.796 138.661 198.796 137.328  c
198.796 136.349 198.692 135.531 198.484 134.875  c
198.338 134.385 198.140 134.041 197.890 133.843  c
197.724 133.708 197.515 133.640 197.265 133.640  c
196.984 133.640 196.729 133.765 196.500 134.015  c
196.197 134.369 195.992 134.924 195.882 135.679  c
195.773 136.434 195.718 137.177 195.718 137.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
244.434 120.444 m
244.434 125.644 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
247.531 136.234 m
249.625 135.218 l
249.828 135.218 l
249.828 142.484 l
249.828 142.963 249.849 143.263 249.890 143.382  c
249.932 143.502 250.015 143.593 250.140 143.656  c
250.265 143.718 250.520 143.755 250.906 143.765  c
250.906 144.000 l
247.671 144.000 l
247.671 143.765 l
248.078 143.755 248.341 143.718 248.460 143.656  c
248.580 143.593 248.664 143.510 248.710 143.406  c
248.757 143.302 248.781 142.994 248.781 142.484  c
248.781 137.843 l
248.781 137.208 248.760 136.802 248.718 136.625  c
248.687 136.489 248.632 136.390 248.554 136.328  c
248.476 136.265 248.380 136.234 248.265 136.234  c
248.109 136.234 247.895 136.302 247.625 136.437  c
247.531 136.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
291.621 120.444 m
291.621 125.644 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
298.953 142.343 m
298.359 144.000 l
293.281 144.000 l
293.281 143.765 l
294.770 142.401 295.820 141.286 296.429 140.421  c
297.039 139.557 297.343 138.770 297.343 138.062  c
297.343 137.510 297.177 137.059 296.843 136.710  c
296.510 136.362 296.109 136.187 295.640 136.187  c
295.224 136.187 294.846 136.309 294.507 136.554  c
294.169 136.799 293.921 137.161 293.765 137.640  c
293.531 137.640 l
293.635 136.859 293.906 136.260 294.343 135.843  c
294.781 135.427 295.328 135.218 295.984 135.218  c
296.682 135.218 297.265 135.442 297.734 135.890  c
298.203 136.338 298.437 136.864 298.437 137.468  c
298.437 137.906 298.333 138.343 298.125 138.781  c
297.812 139.468 297.307 140.192 296.609 140.953  c
295.557 142.109 294.895 142.807 294.625 143.046  c
296.875 143.046 l
297.333 143.046 297.653 143.028 297.835 142.992  c
298.018 142.955 298.184 142.885 298.335 142.781  c
298.487 142.677 298.614 142.531 298.718 142.343  c
298.953 142.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
338.807 120.444 m
338.807 125.644 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
340.656 137.031 m
340.906 136.447 341.218 136.000 341.593 135.687  c
341.968 135.375 342.432 135.218 342.984 135.218  c
343.682 135.218 344.213 135.442 344.578 135.890  c
344.859 136.224 345.000 136.578 345.000 136.953  c
345.000 137.588 344.604 138.239 343.812 138.906  c
344.343 139.114 344.744 139.411 345.015 139.796  c
345.286 140.182 345.421 140.635 345.421 141.156  c
345.421 141.895 345.182 142.536 344.703 143.078  c
344.088 143.796 343.197 144.156 342.031 144.156  c
341.447 144.156 341.052 144.083 340.843 143.937  c
340.635 143.791 340.531 143.635 340.531 143.468  c
340.531 143.343 340.580 143.237 340.679 143.148  c
340.778 143.059 340.895 143.015 341.031 143.015  c
341.135 143.015 341.244 143.031 341.359 143.062  c
341.432 143.083 341.596 143.158 341.851 143.289  c
342.106 143.419 342.281 143.500 342.375 143.531  c
342.531 143.572 342.697 143.593 342.875 143.593  c
343.302 143.593 343.677 143.427 344.000 143.093  c
344.322 142.760 344.484 142.364 344.484 141.906  c
344.484 141.572 344.411 141.250 344.265 140.937  c
344.151 140.697 344.026 140.515 343.890 140.390  c
343.713 140.224 343.466 140.072 343.148 139.937  c
342.830 139.802 342.505 139.734 342.171 139.734  c
341.968 139.734 l
341.968 139.531 l
342.302 139.489 342.638 139.369 342.976 139.171  c
343.315 138.974 343.559 138.737 343.710 138.460  c
343.862 138.184 343.937 137.875 343.937 137.531  c
343.937 137.104 343.802 136.755 343.531 136.484  c
343.260 136.213 342.921 136.078 342.515 136.078  c
341.859 136.078 341.312 136.427 340.875 137.125  c
340.656 137.031 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
385.994 120.444 m
385.994 125.644 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
393.046 140.828 m
393.046 141.734 l
391.890 141.734 l
391.890 144.000 l
390.843 144.000 l
390.843 141.734 l
387.203 141.734 l
387.203 140.921 l
391.203 135.218 l
391.890 135.218 l
391.890 140.828 l
393.046 140.828 l
h
390.843 140.828 m
390.843 136.546 l
387.828 140.828 l
390.843 140.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
32.0934 120.444 m
32.0934 123.044 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
79.2802 120.444 m
79.2802 123.044 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
126.467 120.444 m
126.467 123.044 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
173.654 120.444 m
173.654 123.044 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
220.840 120.444 m
220.840 123.044 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
268.027 120.444 m
268.027 123.044 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
315.214 120.444 m
315.214 123.044 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
362.401 120.444 m
362.401 123.044 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
197.247 388.000 m
197.247 1.00000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
153 247 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
197.247 311.555 m
192.047 311.555 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
172 310 7 13 rc
newpath
182.796 317.437 m
174.203 317.437 l
174.203 316.765 l
182.796 316.765 l
182.796 317.437 l
h
f
Q
newpath
186.953 319.343 m
186.359 321.000 l
181.281 321.000 l
181.281 320.765 l
182.770 319.401 183.820 318.286 184.429 317.421  c
185.039 316.557 185.343 315.770 185.343 315.062  c
185.343 314.510 185.177 314.059 184.843 313.710  c
184.510 313.362 184.109 313.187 183.640 313.187  c
183.224 313.187 182.846 313.309 182.507 313.554  c
182.169 313.799 181.921 314.161 181.765 314.640  c
181.531 314.640 l
181.635 313.859 181.906 313.260 182.343 312.843  c
182.781 312.427 183.328 312.218 183.984 312.218  c
184.682 312.218 185.265 312.442 185.734 312.890  c
186.203 313.338 186.437 313.864 186.437 314.468  c
186.437 314.906 186.333 315.343 186.125 315.781  c
185.812 316.468 185.307 317.192 184.609 317.953  c
183.557 319.109 182.895 319.807 182.625 320.046  c
184.875 320.046 l
185.333 320.046 185.653 320.028 185.835 319.992  c
186.018 319.955 186.184 319.885 186.335 319.781  c
186.487 319.677 186.614 319.531 186.718 319.343  c
186.953 319.343 l
h
187.468 316.750 m
187.468 315.770 187.617 314.924 187.914 314.210  c
188.210 313.497 188.604 312.968 189.093 312.625  c
189.479 312.354 189.875 312.218 190.281 312.218  c
190.937 312.218 191.526 312.552 192.046 313.218  c
192.703 314.052 193.031 315.182 193.031 316.609  c
193.031 317.609 192.888 318.458 192.601 319.156  c
192.315 319.854 191.947 320.362 191.500 320.679  c
191.052 320.997 190.625 321.156 190.218 321.156  c
189.395 321.156 188.708 320.671 188.156 319.703  c
187.697 318.880 187.468 317.895 187.468 316.750  c
h
188.718 316.906 m
188.718 318.093 188.864 319.062 189.156 319.812  c
189.395 320.437 189.755 320.750 190.234 320.750  c
190.463 320.750 190.700 320.648 190.945 320.445  c
191.190 320.242 191.375 319.895 191.500 319.406  c
191.697 318.687 191.796 317.661 191.796 316.328  c
191.796 315.349 191.692 314.531 191.484 313.875  c
191.338 313.385 191.140 313.041 190.890 312.843  c
190.724 312.708 190.515 312.640 190.265 312.640  c
189.984 312.640 189.729 312.765 189.500 313.015  c
189.197 313.369 188.992 313.924 188.882 314.679  c
188.773 315.434 188.718 316.177 188.718 316.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.247 216.000 m
192.047 216.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
172 214 7 13 rc
newpath
182.796 221.437 m
174.203 221.437 l
174.203 220.765 l
182.796 220.765 l
182.796 221.437 l
h
f
Q
newpath
182.531 217.234 m
184.625 216.218 l
184.828 216.218 l
184.828 223.484 l
184.828 223.963 184.849 224.263 184.890 224.382  c
184.932 224.502 185.015 224.593 185.140 224.656  c
185.265 224.718 185.520 224.755 185.906 224.765  c
185.906 225.000 l
182.671 225.000 l
182.671 224.765 l
183.078 224.755 183.341 224.718 183.460 224.656  c
183.580 224.593 183.664 224.510 183.710 224.406  c
183.757 224.302 183.781 223.994 183.781 223.484  c
183.781 218.843 l
183.781 218.208 183.760 217.802 183.718 217.625  c
183.687 217.489 183.632 217.390 183.554 217.328  c
183.476 217.265 183.380 217.234 183.265 217.234  c
183.109 217.234 182.895 217.302 182.625 217.437  c
182.531 217.234 l
h
187.468 220.750 m
187.468 219.770 187.617 218.924 187.914 218.210  c
188.210 217.497 188.604 216.968 189.093 216.625  c
189.479 216.354 189.875 216.218 190.281 216.218  c
190.937 216.218 191.526 216.552 192.046 217.218  c
192.703 218.052 193.031 219.182 193.031 220.609  c
193.031 221.609 192.888 222.458 192.601 223.156  c
192.315 223.854 191.947 224.362 191.500 224.679  c
191.052 224.997 190.625 225.156 190.218 225.156  c
189.395 225.156 188.708 224.671 188.156 223.703  c
187.697 222.880 187.468 221.895 187.468 220.750  c
h
188.718 220.906 m
188.718 222.093 188.864 223.062 189.156 223.812  c
189.395 224.437 189.755 224.750 190.234 224.750  c
190.463 224.750 190.700 224.648 190.945 224.445  c
191.190 224.242 191.375 223.895 191.500 223.406  c
191.697 222.687 191.796 221.661 191.796 220.328  c
191.796 219.349 191.692 218.531 191.484 217.875  c
191.338 217.385 191.140 217.041 190.890 216.843  c
190.724 216.708 190.515 216.640 190.265 216.640  c
189.984 216.640 189.729 216.765 189.500 217.015  c
189.197 217.369 188.992 217.924 188.882 218.679  c
188.773 219.434 188.718 220.177 188.718 220.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.247 120.444 m
192.047 120.444 l
S
Q
q
0 J
1 j
newpath
197.247 24.8888 m
192.047 24.8888 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
182.531 26.2343 m
184.625 25.2187 l
184.828 25.2187 l
184.828 32.4843 l
184.828 32.9635 184.849 33.2630 184.890 33.3828  c
184.932 33.5026 185.015 33.5937 185.140 33.6562  c
185.265 33.7187 185.520 33.7552 185.906 33.7656  c
185.906 34.0000 l
182.671 34.0000 l
182.671 33.7656 l
183.078 33.7552 183.341 33.7187 183.460 33.6562  c
183.580 33.5937 183.664 33.5104 183.710 33.4062  c
183.757 33.3020 183.781 32.9947 183.781 32.4843  c
183.781 27.8437 l
183.781 27.2083 183.760 26.8020 183.718 26.6250  c
183.687 26.4895 183.632 26.3906 183.554 26.3281  c
183.476 26.2656 183.380 26.2343 183.265 26.2343  c
183.109 26.2343 182.895 26.3020 182.625 26.4375  c
182.531 26.2343 l
h
187.468 29.7500 m
187.468 28.7708 187.617 27.9244 187.914 27.2109  c
188.210 26.4974 188.604 25.9687 189.093 25.6250  c
189.479 25.3541 189.875 25.2187 190.281 25.2187  c
190.937 25.2187 191.526 25.5520 192.046 26.2187  c
192.703 27.0520 193.031 28.1822 193.031 29.6093  c
193.031 30.6093 192.888 31.4583 192.601 32.1562  c
192.315 32.8541 191.947 33.3619 191.500 33.6796  c
191.052 33.9974 190.625 34.1562 190.218 34.1562  c
189.395 34.1562 188.708 33.6718 188.156 32.7031  c
187.697 31.8802 187.468 30.8958 187.468 29.7500  c
h
188.718 29.9062 m
188.718 31.0937 188.864 32.0625 189.156 32.8125  c
189.395 33.4375 189.755 33.7500 190.234 33.7500  c
190.463 33.7500 190.700 33.6484 190.945 33.4453  c
191.190 33.2421 191.375 32.8958 191.500 32.4062  c
191.697 31.6875 191.796 30.6614 191.796 29.3281  c
191.796 28.3489 191.692 27.5312 191.484 26.8750  c
191.338 26.3854 191.140 26.0416 190.890 25.8437  c
190.724 25.7083 190.515 25.6406 190.265 25.6406  c
189.984 25.6406 189.729 25.7656 189.500 26.0156  c
189.197 26.3697 188.992 26.9244 188.882 27.6796  c
188.773 28.4349 188.718 29.1770 188.718 29.9062  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.247 359.333 m
194.647 359.333 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.247 263.777 m
194.647 263.777 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.247 168.222 m
194.647 168.222 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.247 72.6666 m
194.647 72.6666 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
