%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Freitag, 29. August 2014 20:16 Uhr MESZ
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
8.50000 6.01604 378.492 376.483 rc
1.00000 0 0 RG
newpath
9.50000 194.757 m
11.4741 176.281 l
13.1919 160.346 l
15.1236 142.736 l
17.0682 125.504 l
19.0035 109.008 l
20.7978 94.4343 l
22.6557 80.2018 l
24.5772 66.5314 l
26.4925 54.0910 l
28.4625 42.6512 l
30.1978 33.8030 l
32.1513 25.3055 l
34.1128 18.4115 l
36.0031 13.3837 l
37.7197 10.2309 l
38.7402 9.00442 l
39.7608 8.26541 l
40.1931 8.09988 l
40.6254 8.02224 l
41.0576 8.03253 l
41.4899 8.13070 l
42.4956 8.69909 l
43.5013 9.74160 l
44.3915 11.0578 l
45.2817 12.7409 l
47.2351 17.7020 l
49.0952 24.0082 l
51.0360 32.1731 l
52.8183 41.0313 l
54.7407 51.9624 l
56.7376 64.7223 l
58.4759 76.8975 l
60.3532 91.0515 l
62.2927 106.639 l
64.1902 122.697 l
66.0261 138.857 l
68.0645 157.351 l
69.8961 174.307 l
71.8517 192.599 l
73.6238 209.197 l
75.5612 227.207 l
77.3841 243.877 l
79.2896 260.860 l
81.1525 276.880 l
83.1029 292.881 l
84.9812 307.405 l
86.9022 321.222 l
88.8072 333.764 l
90.5577 344.171 l
92.5640 354.677 l
94.3585 362.703 l
96.2718 369.759 l
98.1030 375.003 l
100.136 379.040 l
101.016 380.195 l
101.897 380.987 l
102.396 381.275 l
102.896 381.446 l
103.396 381.499 l
103.895 381.435 l
104.806 381.016 l
105.717 380.208 l
106.713 378.881 l
107.709 377.093 l
109.428 372.938 l
111.386 366.594 l
113.277 358.891 l
115.167 349.716 l
117.049 339.188 l
118.858 327.859 l
120.814 314.381 l
122.677 300.462 l
124.639 284.816 l
126.414 269.896 l
128.377 252.718 l
130.256 235.736 l
132.131 218.431 l
134.090 200.135 l
135.894 183.233 l
137.741 166.023 l
139.781 147.313 l
141.627 130.797 l
143.516 114.475 l
145.437 98.6162 l
147.202 84.8234 l
149.084 71.0735 l
150.952 58.5185 l
152.950 46.4158 l
154.713 36.9704 l
156.747 27.6112 l
158.583 20.6576 l
160.399 15.2312 l
162.352 11.0612 l
163.333 9.63116 l
164.313 8.64950 l
164.759 8.35199 l
165.205 8.14791 l
165.651 8.03744 l
166.097 8.02056 l
166.571 8.10513 l
167.045 8.29525 l
167.518 8.59079 l
167.992 8.99157 l
168.916 10.0761 l
169.841 11.5585 l
171.845 16.1217 l
173.580 21.5306 l
175.572 29.3591 l
177.444 38.2269 l
179.299 48.3715 l
181.155 59.7934 l
183.048 72.6483 l
185.054 87.4745 l
186.894 102.028 l
188.710 117.170 l
190.652 134.066 l
192.589 151.500 l
194.328 167.500 l
196.387 186.713 l
198.111 202.864 l
200.126 221.668 l
202.050 239.362 l
203.768 254.813 l
205.700 271.651 l
207.644 287.871 l
209.580 303.133 l
211.374 316.373 l
213.232 329.043 l
215.153 340.916 l
217.068 351.399 l
219.039 360.672 l
220.774 367.499 l
222.727 373.615 l
224.689 378.027 l
225.634 379.521 l
226.579 380.599 l
227.008 380.950 l
227.437 381.215 l
227.867 381.394 l
228.296 381.486 l
228.806 381.482 l
229.316 381.357 l
229.827 381.108 l
230.337 380.738 l
231.201 379.831 l
232.066 378.576 l
234.077 374.323 l
235.858 369.029 l
237.811 361.623 l
239.671 353.079 l
241.612 342.696 l
243.394 331.922 l
245.317 319.073 l
247.314 304.504 l
249.052 290.919 l
250.929 275.428 l
252.869 258.674 l
254.766 241.696 l
256.602 224.863 l
258.640 205.880 l
260.472 188.717 l
262.428 170.452 l
264.200 154.099 l
266.137 136.593 l
267.960 120.621 l
269.866 104.590 l
271.729 89.7133 l
273.679 75.1242 l
275.557 62.1548 l
277.478 50.1111 l
279.383 39.4942 l
281.134 30.9872 l
283.140 22.7950 l
284.934 16.9422 l
286.848 12.2912 l
287.763 10.6584 l
288.679 9.41445 l
289.187 8.89273 l
289.696 8.49200 l
290.204 8.21258 l
290.712 8.05459 l
291.153 8.01605 l
291.593 8.06866 l
292.033 8.21243 l
292.473 8.44726 l
293.472 9.31774 l
294.472 10.6547 l
296.293 14.2800 l
298.285 19.9707 l
300.004 26.2872 l
301.962 35.0049 l
303.853 44.8907 l
305.743 56.1184 l
307.626 68.5449 l
309.435 81.5455 l
311.390 96.6455 l
313.254 111.918 l
315.215 128.772 l
316.991 144.584 l
318.953 162.518 l
320.833 179.991 l
322.708 197.553 l
324.666 215.867 l
326.470 232.559 l
328.317 249.331 l
330.357 267.299 l
332.204 282.918 l
334.093 298.106 l
336.013 312.600 l
337.779 324.960 l
339.661 337.007 l
341.528 347.709 l
343.526 357.667 l
345.289 365.098 l
347.323 372.012 l
349.159 376.667 l
350.067 378.402 l
350.975 379.755 l
351.952 380.780 l
352.928 381.359 l
353.419 381.481 l
353.909 381.489 l
354.399 381.385 l
354.889 381.167 l
355.782 380.482 l
356.674 379.424 l
358.568 375.952 l
360.417 370.984 l
362.422 363.887 l
364.156 356.362 l
366.148 346.213 l
368.021 335.291 l
369.875 323.250 l
371.731 310.086 l
373.624 295.630 l
375.631 279.316 l
377.471 263.600 l
379.287 247.510 l
381.228 229.829 l
383.165 211.855 l
384.992 194.757 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
9.50000 194.757 m
384.992 194.757 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
284 218 15 15 rc
newpath
291.375 227.500 m
290.593 225.750 l
290.281 225.109 l
290.166 224.859 290.072 224.703 290.000 224.640  c
289.927 224.578 289.786 224.541 289.578 224.531  c
289.203 224.500 l
289.078 224.500 l
289.156 224.109 l
291.218 224.109 l
292.468 226.812 l
292.765 226.578 l
293.588 225.911 294.000 225.354 294.000 224.906  c
294.000 224.677 293.906 224.411 293.718 224.109  c
294.968 224.109 l
295.020 224.255 295.046 224.385 295.046 224.500  c
295.046 224.864 294.916 225.195 294.656 225.492  c
294.395 225.789 293.822 226.270 292.937 226.937  c
292.625 227.171 l
293.671 229.359 l
294.062 230.062 l
294.218 230.385 294.432 230.557 294.703 230.578  c
295.109 230.593 l
295.218 230.609 l
295.140 231.000 l
293.062 231.000 l
291.578 227.859 l
291.031 228.343 l
290.166 229.125 289.734 229.796 289.734 230.359  c
289.734 230.578 289.807 230.791 289.953 231.000  c
288.609 231.000 l
288.588 230.885 288.578 230.796 288.578 230.734  c
288.578 230.192 288.974 229.572 289.765 228.875  c
290.750 228.046 l
291.375 227.500 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
9.50000 194.757 m
9.50000 199.957 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 208 7 13 rc
newpath
16.7968 215.437 m
8.20312 215.437 l
8.20312 214.765 l
16.7968 214.765 l
16.7968 215.437 l
h
f
Q
newpath
17.1093 214.187 m
17.7031 213.375 18.4583 212.968 19.3750 212.968  c
20.1979 212.968 20.8697 213.242 21.3906 213.789  c
21.9114 214.335 22.1718 215.046 22.1718 215.921  c
22.1718 216.859 21.8750 217.645 21.2812 218.281  c
20.6875 218.916 19.9583 219.234 19.0937 219.234  c
18.0312 219.234 17.2135 218.820 16.6406 217.992  c
16.0677 217.164 15.7812 215.984 15.7812 214.453  c
15.7812 212.838 16.1119 211.585 16.7734 210.695  c
17.4349 209.804 18.3697 209.359 19.5781 209.359  c
20.3593 209.359 21.0468 209.500 21.6406 209.781  c
21.6406 211.281 l
21.0156 211.281 l
21.0000 211.156 l
20.9687 210.703 l
20.9479 210.421 20.7968 210.192 20.5156 210.015  c
20.2343 209.838 19.8802 209.750 19.4531 209.750  c
18.7135 209.750 18.1380 210.138 17.7265 210.914  c
17.3151 211.690 17.1093 212.781 17.1093 214.187  c
h
17.1562 215.531 m
17.1562 216.500 17.3515 217.291 17.7421 217.906  c
18.1328 218.520 18.6354 218.828 19.2500 218.828  c
20.3541 218.828 20.9062 217.916 20.9062 216.093  c
20.9062 214.302 20.3333 213.406 19.1875 213.406  c
18.5625 213.406 18.0677 213.599 17.7031 213.984  c
17.3385 214.369 17.1562 214.885 17.1562 215.531  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
72.0820 194.757 m
72.0820 199.957 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
69 208 7 13 rc
newpath
79.7968 215.437 m
71.2031 215.437 l
71.2031 214.765 l
79.7968 214.765 l
79.7968 215.437 l
h
f
Q
newpath
82.7031 216.343 m
78.3906 216.343 l
78.3906 215.718 l
83.0937 209.453 l
83.7968 209.453 l
83.7968 215.390 l
85.0468 215.390 l
85.0468 216.343 l
83.7968 216.343 l
83.7968 217.359 l
83.7968 217.859 83.8359 218.182 83.9140 218.328  c
83.9921 218.474 84.1614 218.552 84.4218 218.562  c
84.8593 218.593 l
84.9687 218.609 l
84.9687 219.000 l
81.3750 219.000 l
81.3750 218.609 l
81.4843 218.593 l
82.1406 218.562 l
82.3697 218.552 82.5208 218.468 82.5937 218.312  c
82.6666 218.156 82.7031 217.838 82.7031 217.359  c
82.7031 216.343 l
h
79.0937 215.390 m
82.7031 215.390 l
82.7031 210.609 l
79.0937 215.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
134.664 194.757 m
134.664 199.957 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
131 208 7 13 rc
newpath
141.796 215.437 m
133.203 215.437 l
133.203 214.765 l
141.796 214.765 l
141.796 215.437 l
h
f
Q
newpath
141.015 219.000 m
141.015 218.375 l
141.380 217.322 141.942 216.437 142.703 215.718  c
143.390 215.093 l
144.161 214.364 144.677 213.786 144.937 213.359  c
145.197 212.932 145.328 212.442 145.328 211.890  c
145.328 211.244 145.169 210.729 144.851 210.343  c
144.533 209.958 144.114 209.765 143.593 209.765  c
143.020 209.765 142.536 209.921 142.140 210.234  c
141.994 210.349 141.901 210.770 141.859 211.500  c
141.859 211.656 l
141.218 211.656 l
141.218 209.937 l
142.135 209.552 142.979 209.359 143.750 209.359  c
144.593 209.359 145.289 209.599 145.835 210.078  c
146.382 210.557 146.656 211.161 146.656 211.890  c
146.656 212.880 146.041 213.796 144.812 214.640  c
144.046 215.171 l
142.828 216.005 142.161 216.916 142.046 217.906  c
146.609 217.906 l
146.609 219.000 l
141.015 219.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.246 194.757 m
197.246 199.957 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
195.906 217.234 m
194.937 217.234 194.156 216.783 193.562 215.882  c
192.968 214.981 192.671 213.796 192.671 212.328  c
192.671 210.817 192.968 209.614 193.562 208.718  c
194.156 207.822 194.953 207.375 195.953 207.375  c
196.953 207.375 197.752 207.822 198.351 208.718  c
198.950 209.614 199.250 210.812 199.250 212.312  c
199.250 213.822 198.950 215.020 198.351 215.906  c
197.752 216.791 196.937 217.234 195.906 217.234  c
h
195.921 216.843 m
197.255 216.906 197.921 215.369 197.921 212.234  c
197.921 209.244 197.265 207.750 195.953 207.750  c
194.651 207.750 194.000 209.265 194.000 212.296  c
194.000 215.265 194.640 216.781 195.921 216.843  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
259.828 194.757 m
259.828 199.957 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
261.015 219.000 m
261.015 218.375 l
261.380 217.322 261.942 216.437 262.703 215.718  c
263.390 215.093 l
264.161 214.364 264.677 213.786 264.937 213.359  c
265.197 212.932 265.328 212.442 265.328 211.890  c
265.328 211.244 265.169 210.729 264.851 210.343  c
264.533 209.958 264.114 209.765 263.593 209.765  c
263.020 209.765 262.536 209.921 262.140 210.234  c
261.994 210.349 261.901 210.770 261.859 211.500  c
261.859 211.656 l
261.218 211.656 l
261.218 209.937 l
262.135 209.552 262.979 209.359 263.750 209.359  c
264.593 209.359 265.289 209.599 265.835 210.078  c
266.382 210.557 266.656 211.161 266.656 211.890  c
266.656 212.880 266.041 213.796 264.812 214.640  c
264.046 215.171 l
262.828 216.005 262.161 216.916 262.046 217.906  c
266.609 217.906 l
266.609 219.000 l
261.015 219.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
322.410 194.757 m
322.410 199.957 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
327.703 216.343 m
323.390 216.343 l
323.390 215.718 l
328.093 209.453 l
328.796 209.453 l
328.796 215.390 l
330.046 215.390 l
330.046 216.343 l
328.796 216.343 l
328.796 217.359 l
328.796 217.859 328.835 218.182 328.914 218.328  c
328.992 218.474 329.161 218.552 329.421 218.562  c
329.859 218.593 l
329.968 218.609 l
329.968 219.000 l
326.375 219.000 l
326.375 218.609 l
326.484 218.593 l
327.140 218.562 l
327.369 218.552 327.520 218.468 327.593 218.312  c
327.666 218.156 327.703 217.838 327.703 217.359  c
327.703 216.343 l
h
324.093 215.390 m
327.703 215.390 l
327.703 210.609 l
324.093 215.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
384.992 194.757 m
384.992 199.957 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
387.109 214.187 m
387.703 213.375 388.458 212.968 389.375 212.968  c
390.197 212.968 390.869 213.242 391.390 213.789  c
391.911 214.335 392.171 215.046 392.171 215.921  c
392.171 216.859 391.875 217.645 391.281 218.281  c
390.687 218.916 389.958 219.234 389.093 219.234  c
388.031 219.234 387.213 218.820 386.640 217.992  c
386.067 217.164 385.781 215.984 385.781 214.453  c
385.781 212.838 386.112 211.585 386.773 210.695  c
387.434 209.804 388.369 209.359 389.578 209.359  c
390.359 209.359 391.046 209.500 391.640 209.781  c
391.640 211.281 l
391.015 211.281 l
391.000 211.156 l
390.968 210.703 l
390.947 210.421 390.796 210.192 390.515 210.015  c
390.234 209.838 389.880 209.750 389.453 209.750  c
388.713 209.750 388.138 210.138 387.726 210.914  c
387.315 211.690 387.109 212.781 387.109 214.187  c
h
387.156 215.531 m
387.156 216.500 387.351 217.291 387.742 217.906  c
388.132 218.520 388.635 218.828 389.250 218.828  c
390.354 218.828 390.906 217.916 390.906 216.093  c
390.906 214.302 390.333 213.406 389.187 213.406  c
388.562 213.406 388.067 213.599 387.703 213.984  c
387.338 214.369 387.156 214.885 387.156 215.531  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
40.7910 194.757 m
40.7910 197.357 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
103.373 194.757 m
103.373 197.357 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
165.955 194.757 m
165.955 197.357 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
228.537 194.757 m
228.537 197.357 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
291.119 194.757 m
291.119 197.357 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
353.701 194.757 m
353.701 197.357 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
197.246 381.499 m
197.246 8.01605 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
157 94 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 J
1 j
newpath
197.246 381.500 m
192.046 381.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
176 381 7 13 rc
newpath
186.796 388.437 m
178.203 388.437 l
178.203 387.765 l
186.796 387.765 l
186.796 388.437 l
h
f
Q
newpath
186.171 391.937 m
186.171 390.281 l
186.796 390.281 l
186.812 390.421 l
186.828 390.859 l
186.828 391.130 186.987 391.362 187.304 391.554  c
187.622 391.747 188.015 391.843 188.484 391.843  c
189.036 391.843 189.481 391.625 189.820 391.187  c
190.158 390.750 190.328 390.171 190.328 389.453  c
190.328 388.744 190.106 388.190 189.664 387.789  c
189.221 387.388 188.604 387.187 187.812 387.187  c
187.031 387.187 l
187.031 386.796 l
187.453 386.796 l
189.224 386.796 190.109 386.083 190.109 384.656  c
190.109 383.385 189.552 382.750 188.437 382.750  c
187.947 382.750 187.520 382.854 187.156 383.062  c
187.020 383.145 186.927 383.484 186.875 384.078  c
186.875 384.171 l
186.250 384.171 l
186.250 382.734 l
186.927 382.484 187.692 382.359 188.546 382.359  c
189.411 382.359 190.096 382.554 190.601 382.945  c
191.106 383.335 191.359 383.864 191.359 384.531  c
191.359 385.645 190.703 386.442 189.390 386.921  c
190.192 387.130 190.768 387.427 191.117 387.812  c
191.466 388.197 191.640 388.734 191.640 389.421  c
191.640 390.286 191.359 390.971 190.796 391.476  c
190.234 391.981 189.468 392.234 188.500 392.234  c
187.614 392.234 186.838 392.135 186.171 391.937  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.246 319.252 m
192.046 319.252 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
176 319 7 13 rc
newpath
186.796 326.437 m
178.203 326.437 l
178.203 325.765 l
186.796 325.765 l
186.796 326.437 l
h
f
Q
newpath
186.015 330.000 m
186.015 329.375 l
186.380 328.322 186.942 327.437 187.703 326.718  c
188.390 326.093 l
189.161 325.364 189.677 324.786 189.937 324.359  c
190.197 323.932 190.328 323.442 190.328 322.890  c
190.328 322.244 190.169 321.729 189.851 321.343  c
189.533 320.958 189.114 320.765 188.593 320.765  c
188.020 320.765 187.536 320.921 187.140 321.234  c
186.994 321.349 186.901 321.770 186.859 322.500  c
186.859 322.656 l
186.218 322.656 l
186.218 320.937 l
187.135 320.552 187.979 320.359 188.750 320.359  c
189.593 320.359 190.289 320.599 190.835 321.078  c
191.382 321.557 191.656 322.161 191.656 322.890  c
191.656 323.880 191.041 324.796 189.812 325.640  c
189.046 326.171 l
187.828 327.005 187.161 327.916 187.046 328.906  c
191.609 328.906 l
191.609 330.000 l
186.015 330.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.246 257.005 m
192.046 257.005 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
176 257 7 13 rc
newpath
186.796 264.437 m
178.203 264.437 l
178.203 263.765 l
186.796 263.765 l
186.796 264.437 l
h
f
Q
newpath
189.578 258.515 m
189.578 266.359 l
189.625 266.984 l
189.635 267.234 189.705 267.398 189.835 267.476  c
189.966 267.554 190.234 267.593 190.640 267.593  c
191.390 267.609 l
191.390 268.000 l
186.531 268.000 l
186.531 267.609 l
187.265 267.593 l
187.671 267.593 187.940 267.554 188.070 267.476  c
188.200 267.398 188.276 267.234 188.296 266.984  c
188.328 266.359 l
188.328 260.531 l
188.296 259.890 l
188.296 259.588 188.208 259.437 188.031 259.437  c
187.906 259.437 187.614 259.479 187.156 259.562  c
186.531 259.671 l
186.531 259.281 l
189.578 258.515 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.246 194.757 m
192.046 194.757 l
S
Q
q
0 J
1 j
newpath
197.246 132.510 m
192.046 132.510 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
189.578 133.515 m
189.578 141.359 l
189.625 141.984 l
189.635 142.234 189.705 142.398 189.835 142.476  c
189.966 142.554 190.234 142.593 190.640 142.593  c
191.390 142.609 l
191.390 143.000 l
186.531 143.000 l
186.531 142.609 l
187.265 142.593 l
187.671 142.593 187.940 142.554 188.070 142.476  c
188.200 142.398 188.276 142.234 188.296 141.984  c
188.328 141.359 l
188.328 135.531 l
188.296 134.890 l
188.296 134.588 188.208 134.437 188.031 134.437  c
187.906 134.437 187.614 134.479 187.156 134.562  c
186.531 134.671 l
186.531 134.281 l
189.578 133.515 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.246 70.2631 m
192.046 70.2631 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
186.015 81.0000 m
186.015 80.3750 l
186.380 79.3229 186.942 78.4375 187.703 77.7187  c
188.390 77.0937 l
189.161 76.3645 189.677 75.7864 189.937 75.3593  c
190.197 74.9322 190.328 74.4427 190.328 73.8906  c
190.328 73.2447 190.169 72.7291 189.851 72.3437  c
189.533 71.9583 189.114 71.7656 188.593 71.7656  c
188.020 71.7656 187.536 71.9218 187.140 72.2343  c
186.994 72.3489 186.901 72.7708 186.859 73.5000  c
186.859 73.6562 l
186.218 73.6562 l
186.218 71.9375 l
187.135 71.5520 187.979 71.3593 188.750 71.3593  c
189.593 71.3593 190.289 71.5989 190.835 72.0781  c
191.382 72.5572 191.656 73.1614 191.656 73.8906  c
191.656 74.8802 191.041 75.7968 189.812 76.6406  c
189.046 77.1718 l
187.828 78.0052 187.161 78.9166 187.046 79.9062  c
191.609 79.9062 l
191.609 81.0000 l
186.015 81.0000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.246 8.01577 m
192.046 8.01577 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
186.171 18.9375 m
186.171 17.2812 l
186.796 17.2812 l
186.812 17.4218 l
186.828 17.8593 l
186.828 18.1302 186.987 18.3619 187.304 18.5546  c
187.622 18.7474 188.015 18.8437 188.484 18.8437  c
189.036 18.8437 189.481 18.6250 189.820 18.1875  c
190.158 17.7500 190.328 17.1718 190.328 16.4531  c
190.328 15.7447 190.106 15.1901 189.664 14.7890  c
189.221 14.3880 188.604 14.1875 187.812 14.1875  c
187.031 14.1875 l
187.031 13.7968 l
187.453 13.7968 l
189.224 13.7968 190.109 13.0833 190.109 11.6562  c
190.109 10.3854 189.552 9.75000 188.437 9.75000  c
187.947 9.75000 187.520 9.85416 187.156 10.0625  c
187.020 10.1458 186.927 10.4843 186.875 11.0781  c
186.875 11.1718 l
186.250 11.1718 l
186.250 9.73437 l
186.927 9.48437 187.692 9.35937 188.546 9.35937  c
189.411 9.35937 190.096 9.55468 190.601 9.94531  c
191.106 10.3359 191.359 10.8645 191.359 11.5312  c
191.359 12.6458 190.703 13.4427 189.390 13.9218  c
190.192 14.1302 190.768 14.4270 191.117 14.8125  c
191.466 15.1979 191.640 15.7343 191.640 16.4218  c
191.640 17.2864 191.359 17.9713 190.796 18.4765  c
190.234 18.9817 189.468 19.2343 188.500 19.2343  c
187.614 19.2343 186.838 19.1354 186.171 18.9375  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.246 350.376 m
194.646 350.376 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.246 288.129 m
194.646 288.129 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.246 225.881 m
194.646 225.881 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.246 163.634 m
194.646 163.634 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.246 101.386 m
194.646 101.386 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
197.246 39.1394 m
194.646 39.1394 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
