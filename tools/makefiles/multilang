# Builds the multi-language version
#
# This file is here for 2 reasons:
# 1. This could be implemented in Python, but in the present stage of development,
# it would be unwise to add the extra layer of complexity.
#
# 2. Some form of automation is necessary to setup the continuous integration server
#
# Caveats:
# * Remember to always use tabs instead of spaces! 
# Specially when doing copy+paste, tabs will sometimes be replaced by spaces.
# Make will then throw a "missing separator" error.
# * This script should work on any Unix system, but the result should be cross-plattform,
# so specifically don't use softlinks.
#
# Using GNU Make, invoke as:
#
# cd <VEUNDMINT checkout path>
# make -f tools/makefiles/multilang
#

.DEFAULT_GOAL := all

# Path to source dir, relative to <VEUNDMINT checkout path>
BASEDIR = src

# Name of the output dir to be created 
OUTPUT = tu9onlinekurstest

# Language the index.html will point to by default,
# possible values: de, en
DEFAULT_LANG = de

# Declare as phony so targets will run even if there's a file by that name
.PHONY: convert merge fixlinks cleanup all 


#
# Build everything
#
all: convert merge fixlinks cleanup
	echo "ready"


#
# Use the converter to build the version specified by CURRENT_LANG
#
define convert_cmd
	# prefixed with "-" to ignore converter errors
	-cd $(BASEDIR) && python3 tex2x.py VEUNDMINT lang=$(CURRENT_LANG) output=$(OUTPUT)_$(CURRENT_LANG)
endef


#
# Build the English and the German version
#
convert:
	# set CURRENT_LANG at runtime.
	$(eval CURRENT_LANG := de)
	$(convert_cmd)
	$(eval CURRENT_LANG := en)
	$(convert_cmd)


#
# Merge the 2 versions together
#
merge:
	mv $(OUTPUT)_de $(OUTPUT)

	# move German HTML from /html to /html/de
	mv $(OUTPUT)/html $(OUTPUT)/de
	mkdir $(OUTPUT)/html
	mv $(OUTPUT)/de $(OUTPUT)/html

	# move English HTML to /html/en
	mv $(OUTPUT)_en/html $(OUTPUT)/html/en

	# paths to common (de/en) external files
	# Don't use UNix softlinks here, 
	# as it the output should also work on non-Unixes.
	cd $(OUTPUT)/html && ln -s ../*.js .
	cd $(OUTPUT)/html && ln -s ../*.png .
	cd $(OUTPUT)/html && ln -s ../images .
	cd $(OUTPUT)/html && ln -s ../qtip2 .
	cd $(OUTPUT)/html && ln -s ../css .
	cd $(OUTPUT)/html && ln -s ../datatables .
	cd $(OUTPUT)/html && ln -s ../fonts .
	cd $(OUTPUT)/html && ln -s ../i18n .
	cd $(OUTPUT)/html && ln -s ../MathJax .

#
# Fix the links using shell commands.
#
define fixlinks_cmd
	# extra paths for fonts and tooltip images, as the path depends on
	# javascript var linkPath, which is changed below to fix the redirects
	cd $(OUTPUT)/html/$(CURRENT_LANG) && ln -s ../fonts .
	cd $(OUTPUT)/html/$(CURRENT_LANG) && ln -s ../images .

	# copy redirects to each language version
	cd $(OUTPUT) && cp *.html html/$(CURRENT_LANG)

	# fix links in HTML
	cd $(OUTPUT)/html/$(CURRENT_LANG) && find . *.html -type f -exec sed -i "s|href=\"\.\./html|href=\"\.\./$(CURRENT_LANG)|g" {} \;
	cd $(OUTPUT)/html/$(CURRENT_LANG) && find . *.html -type f -exec sed -i "s|href=\"\.\./\.\./html|href=\"\.\./\.\./$(CURRENT_LANG)|g" {} \;

	# fix links in Javascript
	cd $(OUTPUT)/html/$(CURRENT_LANG) && find . *.html -type f -exec sed -i "s|var linkPath = \"\.\./\"|var linkPath = \"\.\./$(CURRENT_LANG)/\"|g" {} \;
	cd $(OUTPUT)/html/$(CURRENT_LANG) && find . *.html -type f -exec sed -i "s|var linkPath = \"\.\./\.\./\"|var linkPath = \"\.\./\.\./$(CURRENT_LANG)/\"|g" {} \;

	# fix link in redirects (-maxdepth 0 is important here)
	cd $(OUTPUT)/html/$(CURRENT_LANG) && find . *.html -maxdepth 0 -type f -exec sed -i "s|url=html/|url=|g" {} \;
	cd $(OUTPUT)/html/$(CURRENT_LANG) && find . *.html -maxdepth 0 -type f -exec sed -i "s|window\.location\.href = \"html/|window\.location\.href = \"|g" {} \;
	cd $(OUTPUT)/html/$(CURRENT_LANG) && find . *.html -maxdepth 0 -type f -exec sed -i "s|href=\"html/|href=\"|g" {} \;

	# fix index.html to point to default language version
	cd $(OUTPUT) && sed -i "s|url=html|url=html/$(DEFAULT_LANG)|g" index.html
	cd $(OUTPUT) && sed -i "s|window\.location\.href = \"html|window\.location\.href = \"html/$(DEFAULT_LANG)|g" index.html
	cd $(OUTPUT) && sed -i "s|href=\"html|href=\"html/$(DEFAULT_LANG)|g" index.html
	# fixme
	cd $(OUTPUT) && sed -i "s|html/$(DEFAULT_LANG)/$(DEFAULT_LANG)/|html/$(DEFAULT_LANG)/|g" index.html
endef


#
# Fix the link paths in the HTML files
#
fixlinks:
	# set CURRENT_LANG at runtime. Eval writes the line into the target
	$(eval CURRENT_LANG := de)
	$(fixlinks_cmd)
	$(eval CURRENT_LANG := en)
	$(fixlinks_cmd)


cleanup:
	rm -Rf $(OUTPUT)_en


