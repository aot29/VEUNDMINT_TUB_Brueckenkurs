# Builds the multi-language version
#
# This file is here for 2 reasons:
# 1. This could be implemented in Python, but in the present stage of development,
# it would be unwise to add the extra layer of complexity.
#
# 2. Some form of automation is necessary to setup the continuous integration server
#
# Caveats:
# * Remember to always use tabs instead of spaces! 
# Specially when doing copy+paste, tabs will sometimes be replaced by spaces.
# Make will then throw a "missing separator" error.
# * This script should work on any Unix system, but the result should be cross-plattform,
# so specifically don't use softlinks (ln -s is bad).
#
# Using GNU Make, invoke as:
#
# cd <VEUNDMINT checkout path>
# make -f tools/makefiles/multilang
#

.DEFAULT_GOAL := all

# Path to source dir, relative to <VEUNDMINT checkout path>
BASEDIR = src

# Name of the output dir to be created 
OUTPUT = tu9onlinekurstest

# Language the index.html will point to by default,
# possible values: de, en
DEFAULT_LANG = de

# Declare as phony so targets will run even if there's a file by that name
.PHONY: convert merge fixlinks fixredirects cleanup all 


#
# Build everything
#
all: |convert merge fix cleanup
	echo "ready"


#
# Use the converter to build the version specified by CURRENT_LANG
#
define convert_cmd
	# prefixed with "-" to ignore converter errors
	-cd $(BASEDIR) && python3 tex2x.py VEUNDMINT lang=$(CURRENT_LANG) output=$(OUTPUT)_$(CURRENT_LANG)
endef


#
# Build the English and the German version.
#
convert:
	# delete older builds
	-rm -Rf $(OUTPUT)

	# set CURRENT_LANG at runtime.
	$(eval CURRENT_LANG := de)
	$(convert_cmd)
	$(eval CURRENT_LANG := en)
	$(convert_cmd)

#
# set CURRENT_LANG at runtime.
# Build DE language version
#
de:
	$(eval CURRENT_LANG := de)
	$(convert_cmd)


#
# set CURRENT_LANG at runtime.
# Build EN language version
#
en:
	$(eval CURRENT_LANG := en)
	$(convert_cmd)

#
# Merge the 2 versions together.
#
merge:
	mv $(OUTPUT)_de $(OUTPUT)

	# move German HTML from /html to /html/de
	mv $(OUTPUT)/html $(OUTPUT)/de
	mkdir $(OUTPUT)/html
	mv $(OUTPUT)/de $(OUTPUT)/html

	# move English HTML to /html/en
	mv $(OUTPUT)_en/html $(OUTPUT)/html/en


#
# Don't use Unix softlinks here (ln -s),
# as the output should also work on non-Unixes.
#
define fixRedirects_cmd
	# copy HTML-redirects to each language version
	cd $(OUTPUT) && cp *.html html/$(CURRENT_LANG)
endef


#
# Copy redirect pages to each html/language directory
# Moved to its own target, to make sure it is done 
# Before serach and replace starts in "fix" target.
#
fixRedirects:
	# set CURRENT_LANG to de
	$(eval CURRENT_LANG := de)
	$(fixRedirects_cmd)

	# set CURRENT_LANG to en
	$(eval CURRENT_LANG := en)
	$(fixRedirects_cmd)


#
# Fix the links using shell commands.
# Don't use Unix softlinks here (ln -s),
# as the output should also work on non-Unixes.
#
define fixLinks_cmd
	# copy HTML-redirects to each language version
	cd $(OUTPUT) && cp *.html html/$(CURRENT_LANG)

	# fix links to HTML pages
	cd $(OUTPUT)/html/$(CURRENT_LANG) && find . -name '*.html' -type f -exec sed -i "s|href=\"\.\./chapter\.html|href=\"\.\./$(CURRENT_LANG)/chapter.html|g" {} \;
	cd $(OUTPUT)/html/$(CURRENT_LANG) && find . -name '*.html' -type f -exec sed -i "s|href=\"\.\./\.\./chapter\.html|href=\"\.\./\.\./$(CURRENT_LANG)/chapter.html|g" {} \;
	cd $(OUTPUT)/html/$(CURRENT_LANG) && find . -name '*.html' -type f -exec sed -i "s|href=\"\.\./html|href=\"\.\./$(CURRENT_LANG)|g" {} \;
	cd $(OUTPUT)/html/$(CURRENT_LANG) && find . -name '*.html' -type f -exec sed -i "s|href=\"\.\./\.\./html|href=\"\.\./\.\./$(CURRENT_LANG)|g" {} \;

	# fix paths in Javascript
	cd $(OUTPUT)/html/$(CURRENT_LANG) && find . -name '*.html' -type f -exec sed -i "s|var linkPath = \"\.\./\"|var linkPath = \"\.\./$(CURRENT_LANG)/\"|g" {} \;
	cd $(OUTPUT)/html/$(CURRENT_LANG) && find . -name '*.html' -type f -exec sed -i "s|var linkPath = \"\.\./\.\./\"|var linkPath = \"\.\./\.\./$(CURRENT_LANG)/\"|g" {} \;

	# fix path to font files
	cd $(OUTPUT)/html/$(CURRENT_LANG) && find . -name '*.html' -type f -exec sed -i "s|var fontPath = \"\.\./\.\./fonts/\"|var fontPath = \"\.\./\.\./\.\./fonts/\"|g" {} \;
	cd $(OUTPUT)/html/$(CURRENT_LANG) && find . -name '*.html' -type f -exec sed -i "s|var fontPath = \"\.\./fonts/\"|var fontPath = \"\.\./\.\./fonts/\"|g" {} \;

	# fix path for images in Javascript
	cd $(OUTPUT)/html/$(CURRENT_LANG) && find . -name '*.html' -type f -exec sed -i "s|var imagesPath = \"\.\./\.\./images/\"|var imagesPath = \"\.\./\.\./\.\./images/\"|g" {} \;
	cd $(OUTPUT)/html/$(CURRENT_LANG) && find . -name '*.html' -type f -exec sed -i "s|var imagesPath = \"\.\./images/\"|var imagesPath = \"\.\./\.\./images/\"|g" {} \;

	# fix link in redirects (-maxdepth 1 is important here)
	cd $(OUTPUT)/html/$(CURRENT_LANG) && find . -maxdepth 1 -name '*.html' -type f -exec sed -i "s|url=html/|url=|g" {} \;
	cd $(OUTPUT)/html/$(CURRENT_LANG) && find . -maxdepth 1 -name '*.html' -type f -exec sed -i "s|window\.location\.href = \"html/|window\.location\.href = \"|g" {} \;
	cd $(OUTPUT)/html/$(CURRENT_LANG) && find . -maxdepth 1 -name '*.html' -type f -exec sed -i "s|href=\"html/|href=\"|g" {} \;

	# Add the logout.html page out of the template src/templates_html5/html5_logout.html
	cp src/templates_html5/html5_logout.html $(OUTPUT)/html/$(CURRENT_LANG)/logout.html
	

endef


#
# Set the locale for i18n and MathJax
#
define setLocale_cmd
	# set locale of HTML page (for i18n). The HTML locale is currently set in the HTML template.
	cd $(OUTPUT)/html/$(CURRENT_LANG) && find . -name '*.html' -type f -exec sed -i "s|lang=\"de\"|lang=\"$(CURRENT_LANG)\"|g" {} \;
	cd $(OUTPUT)/html/$(CURRENT_LANG) && find . -name '*.html' -type f -exec sed -i "s|lang=\"en\"|lang=\"$(CURRENT_LANG)\"|g" {} \;

	# set the MathJax locale
	cd $(OUTPUT)/html/$(CURRENT_LANG) && find . -name '*.html' -type f -exec sed -i "s|MathJax.js?locale=de|MathJax.js?locale=$(CURENT_LANG)|g" {} \;
	cd $(OUTPUT)/html/$(CURRENT_LANG) && find . -name '*.html' -type f -exec sed -i "s|MathJax.js?locale=en|MathJax.js?locale=$(CURENT_LANG)|g" {} \;
endef


#
# Fix the link paths in the HTML files
#
fix: fixRedirects
	# Fix paths to common (*.js, *.css ...) external files
	# Javascript links seem to be inserted in various places with different syntax
	cd $(OUTPUT)/html && find . -name '*.html' -type f -exec sed -i "s|<script src=\"\.\./|<script src=\"\.\./\.\./|g" {} \;
	cd $(OUTPUT)/html && find . -name '*.html' -type f -exec sed -i "s|<script type=\"text/javascript\" src=\"\.\./|<script type=\"text/javascript\" src=\"\.\./\.\./|g" {} \;

	# fix links to stylesheets
	cd $(OUTPUT)/html && find . -name '*.html' -type f -exec sed -i "s|<link rel=\"stylesheet\" type=\"text/css\" href=\"\.\./|<link rel=\"stylesheet\" type=\"text/css\" href=\"\.\./\.\./|g" {} \;

	# fix links to images
	cd $(OUTPUT)/html && find . -name '*.html' -type f -exec sed -i "s|src=\"\.\./\.\./images/|src=\"\.\./\.\./\.\./images/|g" {} \;
	cd $(OUTPUT)/html && find . -name '*.html' -type f -exec sed -i "s|src='\.\./\.\./images/|src='\.\./\.\./\.\./images/|g" {} \;
	cd $(OUTPUT)/html && find . -name '*.html' -type f -exec sed -i "s|src=\"\.\./images/|src=\"\.\./\.\./images/|g" {} \;
	cd $(OUTPUT)/html && find . -name '*.html' -type f -exec sed -i "s|src='\.\./images/|src=\'\.\./\.\./images/|g" {} \;

	# Point the home button to the site index
	# TODO, set extra Javascript path

	# set CURRENT_LANG to de
	$(eval CURRENT_LANG := de)
	$(fixLinks_cmd)
	$(setLocale_cmd)

	# set CURRENT_LANG to en
	$(eval CURRENT_LANG := en)
	$(fixLinks_cmd)
	$(setLocale_cmd)

	# fix redirect to English welcome page
	cd $(OUTPUT)/html/en && sed -i "s|sectionx3\.1\.0\.html|sectionx2\.1\.0\.html|g" index.html;

	# fix redirect to English "contents of the module" page
	cd $(OUTPUT)/html/en && sed -i "s|4\.1\.1/modstart\.html|3\.1\.1/modstart\.html|g" chapter.html;

	# fix redirect to English "view index" page
	cd $(OUTPUT)/html/en && sed -i "s|4\.1\.5/modstart\.html|3\.1\.4/modstart\.html|g" search.html;

	# fix redirect to English "register account page" page
	cd $(OUTPUT)/html/en && sed -i "s|4\.1\.3/modstart\.html|3\.1\.3/modstart\.html|g" config.html;

	# replace index.html with src/templates_html5/html5_choose_language_simple.html to allow for choosing en or de version
	cp src/templates_html5/html5_choose_language_simple.html $(OUTPUT)/index.html

cleanup:
	-rm -Rf $(OUTPUT)_en


